import { DataObject } from '@twurple/common';
import type { ApiClient } from '../../../ApiClient';
import type { HelixUser } from '../user/HelixUser';
export declare type HelixGoalType = 'follower' | 'subscription' | 'subscription_count' | 'new_subscription_count';
/** @private */
export interface HelixGoalData {
    id: string;
    broadcaster_id: string;
    broadcaster_name: string;
    broadcaster_login: string;
    type: HelixGoalType;
    description: string;
    current_amount: number;
    target_amount: number;
    created_at: Date;
}
/**
 * A creator goal.
 */
export declare class HelixGoal extends DataObject<HelixGoalData> {
    private readonly _client;
    /** @private */
    constructor(data: HelixGoalData, client: ApiClient);
    /**
     * The ID of the goal.
     */
    get id(): string;
    /**
     * The ID of the broadcaster the goal belongs to.
     */
    get broadcasterId(): string;
    /**
     * The display name of the broadcaster the goal belongs to.
     */
    get broadcasterDisplayName(): string;
    /**
     * The name of the broadcaster the goal belongs to.
     */
    get broadcasterName(): string;
    /**
     * Retrieves more information about the broadcaster.
     */
    getBroadcaster(): Promise<HelixUser>;
    /**
     * The type of the goal. Can be one of "follower", "subscription", "subscription_count" or "new_subscription_count".
     */
    get type(): HelixGoalType;
    /**
     * The description of the goal.
     */
    get description(): string;
    /**
     * The current value of the goal.
     */
    get currentAmount(): number;
    /**
     * The target value of the goal.
     */
    get targetAmount(): number;
    /**
     * The date and time when the goal was created.
     */
    get creationDate(): Date;
}
//# sourceMappingURL=HelixGoal.d.ts.map