import { __decorate } from "tslib";
import { mapNullable } from '@d-fischer/shared-utils';
import { DataObject, rawDataSymbol, rtfm } from '@twurple/common';
/**
 * Information about a user who has been banned/timed out.
 */
let HelixBanUser = class HelixBanUser extends DataObject {
    /**
     * The ID of the broadcaster whose chat room the user was banned/timed out from chatting in.
     */
    get broadcasterId() {
        return this[rawDataSymbol].broadcaster_id;
    }
    /**
     * The date and time that the timeout was created.
     */
    get creationDate() {
        return new Date(this[rawDataSymbol].created_at);
    }
    /**
     * The date and time that the timeout will end. Is `null` if the user was banned instead of put in a timeout.
     */
    get endDate() {
        return mapNullable(this[rawDataSymbol].end_time, ts => new Date(ts));
    }
    /**
     * The ID of the moderator that banned or put the user in the timeout.
     */
    get moderatorId() {
        return this[rawDataSymbol].moderator_id;
    }
    /**
     * The ID of the user that was banned or was put in a timeout.
     */
    get userId() {
        return this[rawDataSymbol].user_id;
    }
};
HelixBanUser = __decorate([
    rtfm('api', 'HelixBanUser', 'userId')
], HelixBanUser);
export { HelixBanUser };
